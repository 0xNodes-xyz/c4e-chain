// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: cfevesting/vesting_types.proto

package types

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	github_com_gogo_protobuf_types "github.com/gogo/protobuf/types"
	_ "google.golang.org/protobuf/types/known/durationpb"
	io "io"
	math "math"
	math_bits "math/bits"
	time "time"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf
var _ = time.Kitchen

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type VestingTypes struct {
	VestingTypes []*VestingType `protobuf:"bytes,1,rep,name=vesting_types,json=vestingTypes,proto3" json:"vesting_types,omitempty"`
}

func (m *VestingTypes) Reset()         { *m = VestingTypes{} }
func (m *VestingTypes) String() string { return proto.CompactTextString(m) }
func (*VestingTypes) ProtoMessage()    {}
func (*VestingTypes) Descriptor() ([]byte, []int) {
	return fileDescriptor_67b318d31cacf480, []int{0}
}
func (m *VestingTypes) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *VestingTypes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_VestingTypes.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *VestingTypes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VestingTypes.Merge(m, src)
}
func (m *VestingTypes) XXX_Size() int {
	return m.Size()
}
func (m *VestingTypes) XXX_DiscardUnknown() {
	xxx_messageInfo_VestingTypes.DiscardUnknown(m)
}

var xxx_messageInfo_VestingTypes proto.InternalMessageInfo

func (m *VestingTypes) GetVestingTypes() []*VestingType {
	if m != nil {
		return m.VestingTypes
	}
	return nil
}

type VestingType struct {
	// vesting type name
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// period of locked coins (minutes) from vesting start
	LockupPeriod time.Duration `protobuf:"bytes,2,opt,name=lockup_period,json=lockupPeriod,proto3,stdduration" json:"lockup_period"`
	// period of veesting coins (minutes) from lockup period end
	VestingPeriod time.Duration `protobuf:"bytes,3,opt,name=vesting_period,json=vestingPeriod,proto3,stdduration" json:"vesting_period"`
	// vested coin periodical releasing (minutes)
	TokenReleasingPeriod time.Duration `protobuf:"bytes,4,opt,name=token_releasing_period,json=tokenReleasingPeriod,proto3,stdduration" json:"token_releasing_period"`
	// defines if vesting type allows delegation
	DelegationsAllowed bool `protobuf:"varint,5,opt,name=delegations_allowed,json=delegationsAllowed,proto3" json:"delegations_allowed,omitempty"`
}

func (m *VestingType) Reset()         { *m = VestingType{} }
func (m *VestingType) String() string { return proto.CompactTextString(m) }
func (*VestingType) ProtoMessage()    {}
func (*VestingType) Descriptor() ([]byte, []int) {
	return fileDescriptor_67b318d31cacf480, []int{1}
}
func (m *VestingType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *VestingType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_VestingType.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *VestingType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VestingType.Merge(m, src)
}
func (m *VestingType) XXX_Size() int {
	return m.Size()
}
func (m *VestingType) XXX_DiscardUnknown() {
	xxx_messageInfo_VestingType.DiscardUnknown(m)
}

var xxx_messageInfo_VestingType proto.InternalMessageInfo

func (m *VestingType) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *VestingType) GetLockupPeriod() time.Duration {
	if m != nil {
		return m.LockupPeriod
	}
	return 0
}

func (m *VestingType) GetVestingPeriod() time.Duration {
	if m != nil {
		return m.VestingPeriod
	}
	return 0
}

func (m *VestingType) GetTokenReleasingPeriod() time.Duration {
	if m != nil {
		return m.TokenReleasingPeriod
	}
	return 0
}

func (m *VestingType) GetDelegationsAllowed() bool {
	if m != nil {
		return m.DelegationsAllowed
	}
	return false
}

func init() {
	proto.RegisterType((*VestingTypes)(nil), "chain4energy.c4echain.cfevesting.VestingTypes")
	proto.RegisterType((*VestingType)(nil), "chain4energy.c4echain.cfevesting.VestingType")
}

func init() { proto.RegisterFile("cfevesting/vesting_types.proto", fileDescriptor_67b318d31cacf480) }

var fileDescriptor_67b318d31cacf480 = []byte{
	// 359 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x92, 0xbd, 0x6e, 0xea, 0x30,
	0x14, 0xc7, 0x63, 0xe0, 0x5e, 0x71, 0x0d, 0xdc, 0x21, 0x17, 0x5d, 0xa5, 0x0c, 0x26, 0x62, 0xca,
	0x82, 0x2d, 0xd1, 0xbc, 0x40, 0x51, 0x87, 0xaa, 0x43, 0x55, 0x45, 0x55, 0xa5, 0x76, 0x89, 0xf2,
	0x71, 0x30, 0x11, 0x21, 0x8e, 0xf2, 0x41, 0xcb, 0x5b, 0x74, 0xec, 0xfb, 0x74, 0x61, 0x64, 0xec,
	0xd4, 0x56, 0xf0, 0x22, 0x15, 0x4e, 0xa2, 0xa6, 0x53, 0x99, 0x7c, 0x7c, 0x3e, 0x7e, 0x7f, 0xff,
	0x75, 0x8c, 0x89, 0x37, 0x83, 0x15, 0xa4, 0x59, 0x10, 0x71, 0x56, 0x9e, 0x76, 0xb6, 0x8e, 0x21,
	0xa5, 0x71, 0x22, 0x32, 0xa1, 0xea, 0xde, 0xdc, 0x09, 0x22, 0x13, 0x22, 0x48, 0xf8, 0x9a, 0x7a,
	0x26, 0xc8, 0x3b, 0xfd, 0x9a, 0x1a, 0x10, 0x2e, 0x04, 0x0f, 0x81, 0xc9, 0x7e, 0x37, 0x9f, 0x31,
	0x3f, 0x4f, 0x9c, 0x2c, 0x10, 0x51, 0x41, 0x18, 0xf4, 0xb9, 0xe0, 0x42, 0x86, 0xec, 0x10, 0x15,
	0xd9, 0x91, 0x8b, 0xbb, 0xb7, 0x05, 0xe0, 0xe6, 0xa0, 0xa6, 0x5a, 0xb8, 0xf7, 0x4d, 0x5e, 0x43,
	0x7a, 0xd3, 0xe8, 0x4c, 0xc6, 0xf4, 0x27, 0x7d, 0x5a, 0xc3, 0x58, 0xdd, 0x55, 0x8d, 0x39, 0x7a,
	0x69, 0xe0, 0x4e, 0xad, 0xaa, 0xaa, 0xb8, 0x15, 0x39, 0x4b, 0xd0, 0x90, 0x8e, 0x8c, 0x3f, 0x96,
	0x8c, 0xd5, 0x0b, 0xdc, 0x0b, 0x85, 0xb7, 0xc8, 0x63, 0x3b, 0x86, 0x24, 0x10, 0xbe, 0xd6, 0xd0,
	0x91, 0xd1, 0x99, 0x9c, 0xd0, 0xc2, 0x15, 0xad, 0x5c, 0xd1, 0xf3, 0xd2, 0xd5, 0xb4, 0xbd, 0x79,
	0x1b, 0x2a, 0xcf, 0xef, 0x43, 0x64, 0x75, 0x8b, 0xc9, 0x6b, 0x39, 0xa8, 0x5e, 0xe2, 0xbf, 0x95,
	0x83, 0x12, 0xd5, 0x3c, 0x1e, 0x55, 0x99, 0x2f, 0x59, 0x77, 0xf8, 0x7f, 0x26, 0x16, 0x10, 0xd9,
	0x09, 0x84, 0xe0, 0xa4, 0x35, 0x66, 0xeb, 0x78, 0x66, 0x5f, 0x22, 0xac, 0x8a, 0x50, 0xa2, 0x19,
	0xfe, 0xe7, 0x43, 0x08, 0x5c, 0x76, 0xa7, 0xb6, 0x13, 0x86, 0xe2, 0x01, 0x7c, 0xed, 0x97, 0x8e,
	0x8c, 0xb6, 0xa5, 0xd6, 0x4a, 0x67, 0x45, 0x65, 0x7a, 0xb5, 0xd9, 0x11, 0xb4, 0xdd, 0x11, 0xf4,
	0xb1, 0x23, 0xe8, 0x69, 0x4f, 0x94, 0xed, 0x9e, 0x28, 0xaf, 0x7b, 0xa2, 0xdc, 0x9b, 0x3c, 0xc8,
	0xe6, 0xb9, 0x4b, 0x3d, 0xb1, 0x64, 0xf5, 0x35, 0x31, 0xcf, 0x84, 0xb1, 0x4c, 0xb0, 0x47, 0x56,
	0xfb, 0x5f, 0x72, 0xb1, 0xee, 0x6f, 0xf9, 0xe6, 0xd3, 0xcf, 0x00, 0x00, 0x00, 0xff, 0xff, 0xfb,
	0xb5, 0x6d, 0xb8, 0x7a, 0x02, 0x00, 0x00,
}

func (m *VestingTypes) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *VestingTypes) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *VestingTypes) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.VestingTypes) > 0 {
		for iNdEx := len(m.VestingTypes) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.VestingTypes[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintVestingTypes(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *VestingType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *VestingType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *VestingType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.DelegationsAllowed {
		i--
		if m.DelegationsAllowed {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x28
	}
	n1, err1 := github_com_gogo_protobuf_types.StdDurationMarshalTo(m.TokenReleasingPeriod, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdDuration(m.TokenReleasingPeriod):])
	if err1 != nil {
		return 0, err1
	}
	i -= n1
	i = encodeVarintVestingTypes(dAtA, i, uint64(n1))
	i--
	dAtA[i] = 0x22
	n2, err2 := github_com_gogo_protobuf_types.StdDurationMarshalTo(m.VestingPeriod, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdDuration(m.VestingPeriod):])
	if err2 != nil {
		return 0, err2
	}
	i -= n2
	i = encodeVarintVestingTypes(dAtA, i, uint64(n2))
	i--
	dAtA[i] = 0x1a
	n3, err3 := github_com_gogo_protobuf_types.StdDurationMarshalTo(m.LockupPeriod, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdDuration(m.LockupPeriod):])
	if err3 != nil {
		return 0, err3
	}
	i -= n3
	i = encodeVarintVestingTypes(dAtA, i, uint64(n3))
	i--
	dAtA[i] = 0x12
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintVestingTypes(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintVestingTypes(dAtA []byte, offset int, v uint64) int {
	offset -= sovVestingTypes(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *VestingTypes) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.VestingTypes) > 0 {
		for _, e := range m.VestingTypes {
			l = e.Size()
			n += 1 + l + sovVestingTypes(uint64(l))
		}
	}
	return n
}

func (m *VestingType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovVestingTypes(uint64(l))
	}
	l = github_com_gogo_protobuf_types.SizeOfStdDuration(m.LockupPeriod)
	n += 1 + l + sovVestingTypes(uint64(l))
	l = github_com_gogo_protobuf_types.SizeOfStdDuration(m.VestingPeriod)
	n += 1 + l + sovVestingTypes(uint64(l))
	l = github_com_gogo_protobuf_types.SizeOfStdDuration(m.TokenReleasingPeriod)
	n += 1 + l + sovVestingTypes(uint64(l))
	if m.DelegationsAllowed {
		n += 2
	}
	return n
}

func sovVestingTypes(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozVestingTypes(x uint64) (n int) {
	return sovVestingTypes(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *VestingTypes) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowVestingTypes
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: VestingTypes: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: VestingTypes: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field VestingTypes", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowVestingTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthVestingTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthVestingTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.VestingTypes = append(m.VestingTypes, &VestingType{})
			if err := m.VestingTypes[len(m.VestingTypes)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipVestingTypes(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthVestingTypes
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *VestingType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowVestingTypes
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: VestingType: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: VestingType: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowVestingTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthVestingTypes
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthVestingTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LockupPeriod", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowVestingTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthVestingTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthVestingTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := github_com_gogo_protobuf_types.StdDurationUnmarshal(&m.LockupPeriod, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field VestingPeriod", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowVestingTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthVestingTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthVestingTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := github_com_gogo_protobuf_types.StdDurationUnmarshal(&m.VestingPeriod, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TokenReleasingPeriod", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowVestingTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthVestingTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthVestingTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := github_com_gogo_protobuf_types.StdDurationUnmarshal(&m.TokenReleasingPeriod, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DelegationsAllowed", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowVestingTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.DelegationsAllowed = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipVestingTypes(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthVestingTypes
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipVestingTypes(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowVestingTypes
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowVestingTypes
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowVestingTypes
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthVestingTypes
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupVestingTypes
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthVestingTypes
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthVestingTypes        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowVestingTypes          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupVestingTypes = fmt.Errorf("proto: unexpected end of group")
)
