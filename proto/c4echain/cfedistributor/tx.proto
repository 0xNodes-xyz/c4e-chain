syntax = "proto3";
package chain4energy.c4echain.cfedistributor;

import "cosmos/msg/v1/msg.proto";
import "gogoproto/gogo.proto";
import "cosmos_proto/cosmos.proto";
import "c4echain/cfedistributor/sub_distributor.proto";
// this line is used by starport scaffolding # proto/tx/import

option go_package = "github.com/chain4energy/c4e-chain/x/cfedistributor/types";

// Msg defines the Msg service.
service Msg {
  // this line is used by starport scaffolding # proto/tx/rpc
  rpc UpdateAllSubDistributors(MsgUpdateAllSubDistributors) returns (MsgUpdateAllSubDistributorsResponse);
  rpc UpdateSingleSubdistributor(MsgUpdateSubDistributor) returns (MsgUpdateSubDistributorResponse);
}

message MsgUpdateAllSubDistributors {
  // authority is the address of the governance account.
  string authority = 1;

  repeated SubDistributor sub_distributors = 2 [
    (gogoproto.nullable) = false
  ];
}

message MsgUpdateAllSubDistributorsResponse {}

message MsgUpdateSubDistributor {
  // authority is the address of the governance account.
  string authority = 1;
  SubDistributor sub_distributor = 2;
}

message MsgUpdateSubDistributorResponse {}

// this line is used by starport scaffolding # proto/tx/message