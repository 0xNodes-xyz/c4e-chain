syntax = "proto3";
package chain4energy.c4echain.cfeminter;

import "cosmos/msg/v1/msg.proto";
import "gogoproto/gogo.proto";
import "cosmos_proto/cosmos.proto";
import "c4echain/cfeminter/params.proto";
import "c4echain/cfeminter/minter.proto";
import "google/protobuf/timestamp.proto";

// this line is used by starport scaffolding # proto/tx/import

option go_package = "github.com/chain4energy/c4e-chain/x/cfeminter/types";

// Msg defines the Msg service.
service Msg {
  // this line is used by starport scaffolding # proto/tx/rpc
  rpc UpdateMinters(MsgUpdateMinters) returns (MsgUpdateMintersResponse);
  rpc UpdateMintDenom(MsgUpdateMintDenom) returns (MsgUpdateMintDenomResponse);
  rpc UpdateStartTime(MsgUpdateStartTime) returns (MsgUpdateStartTimeResponse);
}

message MsgUpdateMinters {
  // authority is the address of the governance account.
  string authority = 1;

  repeated Minter minters = 2 [(gogoproto.nullable) = true];
}

message MsgUpdateMintersResponse {}

message MsgUpdateMintDenom {
  string authority = 1;
  string mint_denom = 2;
}

message MsgUpdateMintDenomResponse{}

message MsgUpdateStartTime {
  string authority = 1;
  google.protobuf.Timestamp start_time = 2 [
    (gogoproto.nullable) = false,
    (gogoproto.stdtime) = true
  ];
}

message MsgUpdateStartTimeResponse{}