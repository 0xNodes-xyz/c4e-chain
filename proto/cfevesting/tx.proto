syntax = "proto3";
package chain4energy.c4echain.cfevesting;

import "gogoproto/gogo.proto";
import "cosmos/base/v1beta1/coin.proto";
import "google/protobuf/timestamp.proto";


// this line is used by starport scaffolding # proto/tx/import

option go_package = "github.com/chain4energy/c4e-chain/x/cfevesting/types";

// Msg defines the Msg service.
service Msg {
      rpc Vest(MsgVest) returns (MsgVestResponse);
  rpc WithdrawAllAvailable(MsgWithdrawAllAvailable) returns (MsgWithdrawAllAvailableResponse);
  rpc Delegate(MsgDelegate) returns (MsgDelegateResponse);
  rpc Undelegate(MsgUndelegate) returns (MsgUndelegateResponse);
  rpc BeginRedelegate(MsgBeginRedelegate) returns (MsgBeginRedelegateResponse);
  rpc WithdrawDelegatorReward(MsgWithdrawDelegatorReward) returns (MsgWithdrawDelegatorRewardResponse);
// this line is used by starport scaffolding # proto/tx/rpc
}

message MsgVest {
  string creator = 1;
  uint64 amount = 2;
  string vestingType = 3;
}

message MsgVestResponse {
}

message MsgWithdrawAllAvailable {
  string creator = 1;
}

message MsgWithdrawAllAvailableResponse {
}

message MsgDelegate {
  string delegatorAddress = 1;
  string validatorAddress = 2;
  cosmos.base.v1beta1.Coin amount = 3 [(gogoproto.nullable) = false];
}

message MsgDelegateResponse {
}

message MsgUndelegate {
  string delegatorAddress = 1;
  string validatorAddress = 2;
  cosmos.base.v1beta1.Coin amount = 3 [(gogoproto.nullable) = false];
}

message MsgUndelegateResponse {
  google.protobuf.Timestamp completion_time = 1 [(gogoproto.nullable) = false, (gogoproto.stdtime) = true];
}

message MsgBeginRedelegate {
  string delegatorAddress = 1;
  string validatorSrcAddress = 2;
  string validatorDstAddress = 3;
  cosmos.base.v1beta1.Coin amount = 4 [(gogoproto.nullable) = false];
}

message MsgBeginRedelegateResponse {
  google.protobuf.Timestamp completion_time = 1 [(gogoproto.nullable) = false, (gogoproto.stdtime) = true];
}

message MsgWithdrawDelegatorReward {
  string delegatorAddress = 1;
  string validatorAddress = 2;
}

message MsgWithdrawDelegatorRewardResponse {
}

// this line is used by starport scaffolding # proto/tx/message